volumes:
  postgres_catalogue_dev:
  localstack_catalogue_dev:

networks:
  catalogue-order-system-network:
    external: false

services:
  localstack-catalogue-dev:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack:latest
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - SERVICES=${SERVICES-lambda,s3,apigateway,cloudwatch,dynamodb,sqs,kinesis,serverless,secretsmanager}
      - DEBUG=${DEBUG-}
      - LOCALSTACK_PERSISTENCE=1
    volumes:
      - "localstack_catalogue_dev:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - catalogue-order-system-network

  postgres-catalogue-dev:
    image: postgres:16.0-alpine
    hostname: postgres-catalogue-dev
    ports:
      - "5432:5432"
    env_file:
      - .env.dev.template
    volumes:
      - postgres_catalogue_dev:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    networks:
      - catalogue-order-system-network

  migrations-catalogue-dev:
    build: .
    volumes:
      - .:/app/
    env_file:
      - .env.dev.template
    command: bash -c "while !</dev/tcp/postgres-catalogue-dev/5432; do sleep 1; done; alembic -c migrations/alembic/alembic.ini upgrade head"
    networks:
      - catalogue-order-system-network

  catalogue-app-dev:
    build: .
    volumes:
      - .:/app/
    command: uvicorn src.main:app --host 0.0.0.0 --port 8080 --reload
    ports:
      - "8180:8080"
    env_file:
      - .env.dev.template
    depends_on:
      - postgres-catalogue-dev
      - localstack-catalogue-dev
    networks:
      - catalogue-order-system-network
